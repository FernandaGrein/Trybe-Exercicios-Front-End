{"ast":null,"code":"var _jsxFileName = \"/home/fernanda/trybe-exercicios/Front-End/Trybe-Exerc-cios-Front-End/componentes-com-estado-e-eventos/exercise-pokedex-state-master/src/Pokedex.js\";\nimport React from 'react';\nimport Pokemon from './Pokemon';\nimport Button from './Button';\n\nclass Pokedex extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pokemonIndex: 0,\n      filteredType: 'all'\n    };\n  }\n\n  filterPokemons(filteredType) {\n    this.setState({\n      filteredType,\n      pokemonIndex: 0\n    });\n  }\n\n  nextPokemon(numberOfPokemons) {\n    // numberOfPokemons é o tamanho do array de objetos com todos os pokemons\n    //  numberOfPokemons = filteredPokemons.length\n    this.setState(state => ({\n      pokemonIndex: (state.pokemonIndex + 1) % numberOfPokemons\n    }));\n  }\n\n  fetchFilteredPokemons() {\n    const {\n      pokemons\n    } = this.props; // array de objetos com todos os pokemons - é a prop recebida no APP\n\n    const {\n      filteredType\n    } = this.state; // all \n\n    return pokemons.filter(pokemon => {\n      if (filteredType === 'all') return true;\n      return pokemon.type === filteredType; // - Expected to return a value at the end of arrow function  array-callback-return\n    });\n  } //   fetchPokemonTypes() {\n  //     const { pokemons } = this.props;\n  //     return [...new Set(pokemons.reduce((types, { type }) => [...types, type], []))];\n  //   }\n\n\n  render() {\n    const filteredPokemons = this.fetchFilteredPokemons(); //  console.log(filteredPokemons); = um array de objetos com todos os pokemons\n\n    const pokemonTypes = this.fetchPokemonTypes();\n    const pokemon = filteredPokemons[this.state.pokemonIndex];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pokedex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Pokemon, {\n      pokemon: pokemon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pokedex-buttons-panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.filterPokemons('all'),\n      className: \"filter-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, \"All\"), pokemonTypes.map(type => /*#__PURE__*/React.createElement(Button, {\n      key: type,\n      onClick: () => this.filterPokemons(type),\n      className: \"filter-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, type))), /*#__PURE__*/React.createElement(Button, {\n      className: \"pokedex-button\",\n      onClick: () => this.nextPokemon(filteredPokemons.length),\n      disabled: filteredPokemons.length <= 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, \"Pr\\xF3ximo pok\\xE9mon\"));\n  }\n\n}\n\nexport default Pokedex;","map":{"version":3,"sources":["/home/fernanda/trybe-exercicios/Front-End/Trybe-Exerc-cios-Front-End/componentes-com-estado-e-eventos/exercise-pokedex-state-master/src/Pokedex.js"],"names":["React","Pokemon","Button","Pokedex","Component","constructor","props","state","pokemonIndex","filteredType","filterPokemons","setState","nextPokemon","numberOfPokemons","fetchFilteredPokemons","pokemons","filter","pokemon","type","render","filteredPokemons","pokemonTypes","fetchPokemonTypes","map","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAsC;AAElCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,CADH;AAEXC,MAAAA,YAAY,EAAE;AAFH,KAAb;AAID;;AAEDC,EAAAA,cAAc,CAACD,YAAD,EAAe;AAC3B,SAAKE,QAAL,CAAc;AAAEF,MAAAA,YAAF;AAAgBD,MAAAA,YAAY,EAAE;AAA9B,KAAd;AACD;;AAGDI,EAAAA,WAAW,CAACC,gBAAD,EAAmB;AAC1B;AACA;AACF,SAAKF,QAAL,CAAcJ,KAAK,KAAK;AACtBC,MAAAA,YAAY,EAAE,CAACD,KAAK,CAACC,YAAN,GAAqB,CAAtB,IAA2BK;AADnB,KAAL,CAAnB;AAGD;;AAEDC,EAAAA,qBAAqB,GAAG;AACtB,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKT,KAA1B,CADsB,CACY;;AAClC,UAAM;AAAEG,MAAAA;AAAF,QAAmB,KAAKF,KAA9B,CAFsB,CAEe;;AAErC,WAAOQ,QAAQ,CAACC,MAAT,CAAgBC,OAAO,IAAI;AAChC,UAAIR,YAAY,KAAK,KAArB,EAA4B,OAAO,IAAP;AAC5B,aAAOQ,OAAO,CAACC,IAAR,KAAiBT,YAAxB,CAFgC,CAEM;AACvC,KAHM,CAAP;AAID,GA/B+B,CAiClC;AACA;AAEA;AACA;;;AAEEU,EAAAA,MAAM,GAAG;AACP,UAAMC,gBAAgB,GAAG,KAAKN,qBAAL,EAAzB,CADO,CAET;;AACE,UAAMO,YAAY,GAAG,KAAKC,iBAAL,EAArB;AACA,UAAML,OAAO,GAAGG,gBAAgB,CAAC,KAAKb,KAAL,CAAWC,YAAZ,CAAhC;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAGS,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAE,MAAM,KAAKP,cAAL,CAAoB,KAApB,CADjB;AAEE,MAAA,SAAS,EAAC,eAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAOGW,YAAY,CAACE,GAAb,CAAiBL,IAAI,iBACpB,oBAAC,MAAD;AACE,MAAA,GAAG,EAAGA,IADR;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKR,cAAL,CAAoBQ,IAApB,CAFjB;AAGE,MAAA,SAAS,EAAC,eAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKIA,IALJ,CADD,CAPH,CAFF,eAmBE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAC,gBADZ;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKN,WAAL,CAAiBQ,gBAAgB,CAACI,MAAlC,CAFjB;AAGE,MAAA,QAAQ,EAAGJ,gBAAgB,CAACI,MAAjB,IAA2B,CAHxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAnBF,CADF;AA8BH;;AA3EiC;;AA8EtC,eAAerB,OAAf","sourcesContent":["import React from 'react';\nimport Pokemon from './Pokemon';\nimport Button from './Button';\n\nclass Pokedex extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          pokemonIndex: 0,\n          filteredType: 'all',\n        };\n      }\n    \n      filterPokemons(filteredType) {\n        this.setState({ filteredType, pokemonIndex: 0 });\n      }\n      \n    \n      nextPokemon(numberOfPokemons) {\n          // numberOfPokemons é o tamanho do array de objetos com todos os pokemons\n          //  numberOfPokemons = filteredPokemons.length\n        this.setState(state => ({\n          pokemonIndex: (state.pokemonIndex + 1) % numberOfPokemons,\n        }));\n      }\n    \n      fetchFilteredPokemons() {\n        const { pokemons } = this.props;  // array de objetos com todos os pokemons - é a prop recebida no APP\n        const { filteredType } = this.state; // all \n    \n        return pokemons.filter(pokemon => {\n          if (filteredType === 'all') return true;\n          return pokemon.type === filteredType; // - Expected to return a value at the end of arrow function  array-callback-return\n        });\n      }\n    \n    //   fetchPokemonTypes() {\n    //     const { pokemons } = this.props;\n    \n    //     return [...new Set(pokemons.reduce((types, { type }) => [...types, type], []))];\n    //   }\n    \n      render() {\n        const filteredPokemons = this.fetchFilteredPokemons();\n      //  console.log(filteredPokemons); = um array de objetos com todos os pokemons\n        const pokemonTypes = this.fetchPokemonTypes();\n        const pokemon = filteredPokemons[this.state.pokemonIndex];\n    \n        return (\n          <div className=\"pokedex\">\n            <Pokemon pokemon={ pokemon } />\n            <div className=\"pokedex-buttons-panel\">\n              <Button\n                onClick={() => this.filterPokemons('all')}\n                className=\"filter-button\"\n              >\n                All\n              </Button>\n              {pokemonTypes.map(type => (\n                <Button\n                  key={ type }\n                  onClick={() => this.filterPokemons(type)}\n                  className=\"filter-button\"\n                >\n                  { type }\n                </Button>\n              ))}\n            </div>\n            <Button\n              className=\"pokedex-button\"\n              onClick={() => this.nextPokemon(filteredPokemons.length)}\n              disabled={ filteredPokemons.length <= 1 }\n            >\n              Próximo pokémon\n            </Button>\n              {/* {this.props.pokemons.map(pokemon => <Pokemon key={pokemon.id} pokemon={pokemon} />)} */}\n            </div>\n        );\n    }\n}\n\nexport default Pokedex;"]},"metadata":{},"sourceType":"module"}